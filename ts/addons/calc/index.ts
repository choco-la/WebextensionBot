import { API } from '../../bot/api'
import { IArgumentToot } from '../../types/apitype'
import { IParsedToot } from '../../types/deftype'
import { evalCalc } from './evalcalc'

export const calc = (toot: IParsedToot): void => {
  const onInvalid = '„Çè„Åã„Çì„Å™„ÅÑ„Çà„Åâ„Äú(ÔΩ°>Ôπè<ÔΩ°)'
  const over = 'Â§ß„Åç„Åô„Åé„Çã(‚à©¬¥Ôπè`‚à©)üí¶'
  const input = /(?:calc|Ë®àÁÆó|„Åë„ÅÑ„Åï„Çì)[:Ôºö](?:\n)*(.+)/i.exec(toot.content)
  if (!input) return

  const expression = input[1].trim()
  const result = evalCalc(expression)
  const sendData: IArgumentToot = {
    in_reply_to_id: toot.id,
    status: '',
    visibility: toot.visibility
  }

  if (isNaN(result)) {
    sendData.status = `@${toot.account} ${onInvalid}`
  } else if (result.toString().length > 300) {
    sendData.status = `@@${toot.account} ${over}`
  } else {
    sendData.status = `@${toot.account} „Çì„Äú„ÄÇ„ÄÇ„ÄÇ\n${result}„Åã„Å™„ÄúÔºü(‡πë>‚ó°<‡πë)`
  }
  setTimeout(() => API.write.toot(sendData), 3000)
}
